/* Import statements should be the first things in the file */
@import "tailwindcss";  /* Ensure this is above everything */
@import url('https://fonts.googleapis.com/css2?family=Nunito:wght@400;700;800&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800;900&family=Lora:ital,wght@0,400..700;1,400..700&display=swap');

/* Custom variant */
@theme {
  /* Font Families */
  /* This makes utilities like `font-sans` use "Inter" */
  --font-sans: "Inter", system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* This creates a `font-serif` utility using "Lora" */
  --font-serif: "Lora", Georgia, Cambria, "Times New Roman", Times, serif;

  /* Custom Colors (generates utilities like bg-brand-blue, text-brand-blue etc.) */
  --color-brand-blue: #0052CC;    /* Example: A strong blue */
  --color-brand-purple: #5243AA;  /* Example: A rich purple */
  --color-light-accent: #E9F2FF;  /* Example: Light blue for subtle backgrounds */
  --color-dark-text: #172B4D;     /* Example: Dark text for readability */
  --color-medium-text: #42526E;   /* Example: Medium text for secondary info */
  --color-light-text: #6B778C;    /* Example: Lighter text for less emphasis */

  /* You can also extend/override other theme aspects like breakpoints: */
  /* --breakpoint-3xl: "1920px"; */
}
body {
  font-family: var(--font-sans);
  -webkit-font-smoothing: antialiased; /* Improves font rendering on WebKit */
  -moz-osx-font-smoothing: grayscale; /* Improves font rendering on Firefox */
}
select, input[type="text"], input[type="search"] {
  @apply p-2 border border-gray-300 rounded-md shadow-sm focus:ring-brand-blue focus:border-brand-blue;
}
/* Body styles */
body {
  font-family: 'Nunito', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Utility classes for animations */
.animate-breathe {
  animation: breathe 6s ease-in-out infinite;
}

.animate-floating {
  animation: floating 10s ease-in-out infinite;
}

.animate-fade-in {
  animation: fade-in 0.5s ease-in-out;
}

/* Clip-path styles */
.clip-triangle {
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
}

.clip-star {
  clip-path: polygon(
    50% 0%, 61% 35%, 98% 35%, 
    68% 57%, 79% 91%, 
    50% 70%, 21% 91%, 
    32% 57%, 2% 35%, 
    39% 35%
  );
}

.clip-pentagon {
  clip-path: polygon(50% 0%, 100% 38%, 82% 100%, 18% 100%, 0% 38%);
  -webkit-clip-path: polygon(50% 0%, 100% 38%, 82% 100%, 18% 100%, 0% 38%);
}

.clip-rhombus {
  clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
  -webkit-clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
}

.clip-trapezoid {
  clip-path: polygon(20% 0%, 80% 0%, 100% 100%, 0% 100%);
  -webkit-clip-path: polygon(20% 0%, 80% 0%, 100% 100%, 0% 100%);
}

.clip-ellipse {
  border-radius: 50%;
}

.clip-parallelogram {
  transform: skew(-20deg);
}

.clip-kite {
  clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
  -webkit-clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
}

.clip-semicircle {
  border-radius: 100% 100% 0 0 / 50% 50% 0 0;
}

.clip-hexagon {
  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
  -webkit-clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
}

.clip-octagon {
  clip-path: polygon(30% 0%, 70% 0%, 100% 30%, 100% 70%, 70% 100%, 30% 100%, 0% 70%, 0% 30%);
  -webkit-clip-path: polygon(30% 0%, 70% 0%, 100% 30%, 100% 70%, 70% 100%, 30% 100%, 0% 70%, 0% 30%);
}

.circle {
  border-radius: 50%;
}
@custom-variant dark (&:where(.dark, .dark *));

/* Keyframes for animations */
@keyframes fade-in {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes breathe {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.5);
  }
}

@keyframes floating {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-20px);
  }
  100% {
    transform: translateY(0);
  }
}

@keyframes pop-in-reward {
  0% {
    transform: scale(0.5) translateY(20px);
    opacity: 0;
  }
  60% {
    transform: scale(1.2) translateY(-10px); /* Slightly larger pop */
    opacity: 1;
  }
  80% {
     transform: scale(1.1) translateY(5px); /* Settle slightly */
  }
  100% {
    transform: scale(1) translateY(0);
    opacity: 1;
  }
}

.animate-pop-in-reward {
  animation: pop-in-reward 0.6s ease-out forwards; /* Slightly longer duration */
}

/* Optional: Add a slight fade-in for the image/word when they appear */
@keyframes fade-in {
    0% { opacity: 0; }
    100% { opacity: 1; }
}
 .animate-fade-in {
     animation: fade-in 0.5s ease-out forwards;
 }
 @keyframes pop-in-reward {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  80% {
    transform: scale(1.1);
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes slide-up {
  0% {
    transform: translateY(20px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

.animate-pop-in-reward {
  animation: pop-in-reward 0.3s ease-out forwards;
}

.animate-fade-in {
  animation: fade-in 0.2s ease-in-out forwards;
}

.animate-slide-up {
  animation: slide-up 0.3s ease-out forwards 0.2s; /* Added delay */
}